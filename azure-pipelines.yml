name: 1.0.$(Rev:r)

trigger:
  branches:
    include:
    - refs/heads/main
  batch: True

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c3dcf114-3b01-4424-bee8-4c608be4829b'
  imageRepository: 'code-build-deploy-blogs'
  containerRegistry: 'codebuilddeploy.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/CodeBuildDeploy.Blogs/Dockerfile'
  resourceGroup: 'codebuilddeploy-rg'
  containerAppName: 'codebuilddeploy-blogs'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push Blogs service
  jobs:
  - job: Build
    displayName: Docker Build and Deploy Blogs service
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
      displayName: 'Checkout Blogs Repo'
    - task: NuGetAuthenticate@1
      displayName: 'Authenticate to NuGet'
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: './CodeBuildDeploy.Blogs/CodeBuildDeploy.Blogs.csproj'
        feedsToUse: 'config'
        nugetConfigPath: './nuget.config'
    - task: Docker@2
      displayName: Docker Build
      inputs:
        command: build
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: |
          latest
          $(Build.BuildNumber)
        Dockerfile: $(dockerfilePath)
        buildContext: .
        arguments: '--build-arg CBD_FEED_ACCESSTOKEN=$(VSS_NUGET_ACCESSTOKEN)'
    - task: Docker@2
      displayName: Docker Push
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: |
          latest
          $(Build.BuildNumber)
- stage: DeployProd
  displayName: Deploy Blogs service Prod
  jobs:
  - job: DeployProd
    displayName: Deploy Blogs service Prod
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureContainerApps@1
      displayName: 'Azure Container App Deploy: codebuilddeploy'
      inputs:
        azureSubscription: 'Visual Studio Premium with MSDN (a8c29995-b368-4d2a-b32a-db619e53639d)'
        containerAppName: $(containerAppName)
        resourceGroup: $(resourceGroup)
        imageToDeploy: '$(containerRegistry)/$(imageRepository):$(Build.BuildNumber)'
        targetPort: '8080'
...
