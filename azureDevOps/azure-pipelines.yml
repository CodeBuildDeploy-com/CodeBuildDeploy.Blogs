trigger:
  branches:
    include:
    - refs/heads/main
    - refs/heads/release/*

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
  - repository: self
  - repository: platform
    type: git
    name: 'CodeBuildDeploy.Platform'
  - repository: appplatform
    type: git
    name: 'CodeBuildDeploy.Platform.App'

variables:
- name: Service.Name.KebabCase
  value: "codebuilddeploy-blogs"

- template: azureDevOps/variables-infrastructure.yml@platform
- template: azureDevOps/variables-infrastructure.yml@appplatform

- template: azureDevOps/variables-build.yml@platform

- template: azureDevOps/variables-versioning.yml@platform
  parameters:
    buildTypeRelease: ${{ variables['build.type.release'] }}
    majorVersion: 1
    minorVersion: 1

- name: Version.Informational.KebabCase
  value: $[ replace(variables['Version.Informational'],'.','-') ]

name: $[variables['Build.Number']]

stages:
- stage: Build
  displayName: Build and push Blogs service
  jobs:
  - job: Build
    displayName: Docker Build and Deploy Blogs service
    steps:
    - checkout: self
      displayName: 'Checkout Blogs Repo'
      persistCredentials: true

    - bash: |
        echo "build.type.release = $(build.type.release)"
        echo "SourceVersion = $(Build.SourceVersion)"
        echo "SourceVersion.Short = $(Build.SourceVersion.Short)"
        echo "Build Number = $(Build.Number)"
        echo "Version Assembly = $(Version.Assembly)"
        echo "Version File = $(Version.File)"
        echo "Version Informational = $(Version.Informational)"
        echo "Version Major = $(Version.Major)"
        echo "Version Minor = $(Version.Minor)"
        echo "Version Patch = $(Version.Patch)"
      displayName: Output Version

    - task: NuGetAuthenticate@1
      displayName: 'Authenticate to NuGet'

    - task: Docker@2
      displayName: Build API Image
      inputs:
        command: build
        containerRegistry: $(Acr.Repository.Connect)
        repository: "${{ variables['Service.Name.KebabCase'] }}"
        tags: |
          latest
          $(Build.Number)
        Dockerfile: '$(Build.SourcesDirectory)/src/CodeBuildDeploy.Blogs.Api/Dockerfile'
        buildContext: .
        arguments: '--target final --build-arg FEED_ACCESSTOKEN=$(VSS_NUGET_ACCESSTOKEN) --build-arg VERSION=$(Build.Number) --build-arg ASSEMBLY_VERSION=$(Version.Assembly) --build-arg FILE_VERSION=$(Version.File) --build-arg INFORMATIONAL_VERSION=$(Version.Informational) --build-arg PACKAGE_VERSION=$(Build.Number)'

    - task: Docker@2
      displayName: Build Data Image
      inputs:
        command: build
        containerRegistry: $(Acr.Repository.Connect)
        repository: "${{ variables['Service.Name.KebabCase'] }}-data"
        tags: |
          latest
          $(Build.Number)
        Dockerfile: '$(Build.SourcesDirectory)/src/CodeBuildDeploy.Blogs.Api/Dockerfile'
        buildContext: .
        arguments: '--target finalMigration --build-arg FEED_ACCESSTOKEN=$(VSS_NUGET_ACCESSTOKEN) --build-arg VERSION=$(Build.Number) --build-arg ASSEMBLY_VERSION=$(Version.Assembly) --build-arg FILE_VERSION=$(Version.File) --build-arg INFORMATIONAL_VERSION=$(Version.Informational) --build-arg PACKAGE_VERSION=$(Build.Number)'

    - task: PowerShell@2
      displayName: Helm Set Image Versions
      env:
        API_IMAGE: "$(Acr.Repository.Name).azurecr.io/$(Service.Name.KebabCase):$(Build.Number)"
        DATA_NAME_VERSION: "$(Version.Informational.KebabCase)"
        DATA_IMAGE: "$(Acr.Repository.Name).azurecr.io/$(Service.Name.KebabCase)-data:$(Build.Number)"
      inputs:
        targetType: inline
        script: |
          sed -ri -e "s#image: \{\{ required `"Populated by build`" null \}\}#image: ${env:API_IMAGE}#" helm/service/templates/api-deployment.yaml
          sed -ri -e "s/-\{\{ required `"version cammelcase populated by build`" null \}\}/-${env:DATA_NAME_VERSION}/" helm/service/templates/data-job.yaml
          sed -ri -e "s#image: \{\{ required `"Populated by build`" null \}\}#image: ${env:DATA_IMAGE}#" helm/service/templates/data-job.yaml
          cat helm/service/templates/data-job.yaml
    
    - task: HelmDeploy@0
      displayName: Helm Package
      inputs:
        command: package
        chartPath: helm/service
        destination: $(Build.ArtifactStagingDirectory)/helm
        chartVersion: $(Build.Number)

    - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
      - task: Docker@2
        displayName: Push API Image
        inputs:
          command: push
          containerRegistry: $(Acr.Repository.Connect)
          repository: $(Service.Name.KebabCase)
          tags: |
            latest
            $(Build.Number)

      - task: Docker@2
        displayName: Push Data Image
        inputs:
          command: push
          containerRegistry: $(Acr.Repository.Connect)
          repository: "$(Service.Name.KebabCase)-data"
          tags: |
            latest
            $(Build.Number)

      - task: AzureCLI@2
        displayName: ACR Login
        inputs:
          azureSubscription: '$(Azure.Subscription.Prod)'
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az acr login --name $(Acr.Repository.Name).azurecr.io

      - task: PowerShell@2
        displayName: Push Helm Chart
        env:
          CHART: $(Build.ArtifactStagingDirectory)/helm/$(Service.Name.KebabCase)-$(Build.Number).tgz
        inputs:
          targetType: inline
          script: |
            helm push ${env:CHART} $(Helm.Chart.BaseUrl)

      - script: |
          git tag $(Build.Number)
          git push origin $(Build.Number)
        workingDirectory: $(Build.SourcesDirectory)
        displayName: Tag Version in Git